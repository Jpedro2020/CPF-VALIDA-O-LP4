{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o\\\\Desktop\\\\VALIDAR CPF\\\\cpf\\\\src\\\\pages\\\\CpfValidator\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ToggleBox from \"../../components/ToggleBox\";\nimport '../CpfValidator/index.css';\nimport InputMask from \"react-input-mask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CpfValidator() {\n  _s();\n\n  const [cpf, setCpf] = useState('');\n  const [cpfValido, setCpfValido] = useState('');\n\n  async function ValidaCpf() {\n    window.toggleBoxComponent.toggleBoxEnable();\n    const response = await api.post('/cpf', {\n      cpf\n    });\n\n    if (response.data.cpfValidator.resposta) {\n      setCpfValido(\"válido\");\n    } else {\n      setCpfValido(\"inválido\");\n    }\n  }\n\n  function handleChange(event) {\n    setCpf(event.target.value);\n    window.toggleBoxComponent.toggleBoxDisable();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputMask, {\n      className: \"txt\",\n      id: \"txtCpf\",\n      placeholder: \"Informe o CPF\",\n      value: cpf,\n      onChange: handleChange,\n      mask: \"999.999.999-99\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: ValidaCpf,\n      children: \"Validar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToggleBox, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"labelAnswer\",\n        children: [\"O CPF \\xE9 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: cpfValido === \"válido\" ? \"answerTrue\" : \"answerFalse\",\n          children: cpfValido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 48\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CpfValidator, \"88vw2ixn8JfvYrErEBvIP7zizjc=\");\n\n_c = CpfValidator;\n\nvar _c;\n\n$RefreshReg$(_c, \"CpfValidator\");","map":{"version":3,"sources":["C:/Users/João/Desktop/VALIDAR CPF/cpf/src/pages/CpfValidator/index.js"],"names":["React","useState","ToggleBox","InputMask","CpfValidator","cpf","setCpf","cpfValido","setCpfValido","ValidaCpf","window","toggleBoxComponent","toggleBoxEnable","response","api","post","data","cpfValidator","resposta","handleChange","event","target","value","toggleBoxDisable"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAO,2BAAP;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAEA,eAAe,SAASC,YAAT,GAAyB;AAAA;;AACpC,QAAM,CAAEC,GAAF,EAAOC,MAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeQ,SAAf,GAA2B;AACvBC,IAAAA,MAAM,CAACC,kBAAP,CAA0BC,eAA1B;AACA,UAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,IAAJ,CAAS,MAAT,EAAiB;AAAEV,MAAAA;AAAF,KAAjB,CAAvB;;AAEA,QAAIQ,QAAQ,CAACG,IAAT,CAAcC,YAAd,CAA2BC,QAA/B,EAAwC;AACpCV,MAAAA,YAAY,CAAC,QAAD,CAAZ;AACH,KAFD,MAGK;AACDA,MAAAA,YAAY,CAAC,UAAD,CAAZ;AACH;AAEJ;;AAED,WAASW,YAAT,CAAuBC,KAAvB,EAA+B;AAC3Bd,IAAAA,MAAM,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACAZ,IAAAA,MAAM,CAACC,kBAAP,CAA0BY,gBAA1B;AACH;;AAED,sBACI;AAAA,4BACA,QAAC,SAAD;AACI,MAAA,SAAS,EAAC,KADd;AAEI,MAAA,EAAE,EAAC,QAFP;AAGI,MAAA,WAAW,EAAC,eAHhB;AAII,MAAA,KAAK,EAAElB,GAJX;AAKI,MAAA,QAAQ,EAAEc,YALd;AAMI,MAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,YADA,eASA;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEV,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATA,eAUA,QAAC,SAAD;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,+CAAmC;AAAQ,UAAA,SAAS,EAAEF,SAAS,KAAK,QAAd,GAAyB,YAAzB,GAAwC,aAA3D;AAAA,oBAA2EA;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA,kBADJ;AAgBH;;GAtCuBH,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from 'react';\nimport ToggleBox from \"../../components/ToggleBox\";\nimport '../CpfValidator/index.css';\nimport InputMask from \"react-input-mask\";\n\nexport default function CpfValidator () {\n    const [ cpf, setCpf ] = useState('');\n    const [cpfValido, setCpfValido] = useState('');\n\n    async function ValidaCpf() {\n        window.toggleBoxComponent.toggleBoxEnable();\n        const response = await api.post('/cpf', { cpf });\n        \n        if (response.data.cpfValidator.resposta){\n            setCpfValido(\"válido\");\n        }\n        else {\n            setCpfValido(\"inválido\");\n        }\n\n    }\n\n    function handleChange( event ) {\n        setCpf(event.target.value);\n        window.toggleBoxComponent.toggleBoxDisable();\n    }\n    \n    return (\n        <>\n        <InputMask\n            className=\"txt\"\n            id=\"txtCpf\"\n            placeholder=\"Informe o CPF\"\n            value={cpf}\n            onChange={handleChange}\n            mask=\"999.999.999-99\"\n            ></InputMask>\n        <button className=\"btn\" onClick={ValidaCpf}>Validar</button>\n        <ToggleBox>\n            <p className=\"labelAnswer\">O CPF é <strong className={cpfValido === \"válido\" ? \"answerTrue\" : \"answerFalse\"}>{cpfValido}</strong>.</p>\n        </ToggleBox>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}