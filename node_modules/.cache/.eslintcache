[{"C:\\Users\\João\\Desktop\\VALIDAR CPF\\cpf\\src\\index.js":"1","C:\\Users\\João\\Desktop\\VALIDAR CPF\\cpf\\src\\App.js":"2"},{"size":198,"mtime":1604429502000,"results":"3","hashOfConfig":"4"},{"size":3977,"mtime":1623275313990,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sr65go",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\João\\Desktop\\VALIDAR CPF\\cpf\\src\\index.js",[],"C:\\Users\\João\\Desktop\\VALIDAR CPF\\cpf\\src\\App.js",["11","12","13","14"],"import React, {useEffect,useState} from 'react'\nimport './bootstrap.css'\nimport './style.css'\n\n\n\nfunction App() {\n  \n \n  const [fundo, setFundo] = useState('')\n  const [borda, setBordas]= useState('class')\n  const[botao,setvalue]= useState('')\n  const[entrada,setEntrada] = useState(0)\n  const[resultado2, setResultado2] = useState('incorreto')\n\n  useEffect ( () => {\n\n    setvalue(entrada)\n   // let digito1 = (Number(botao[0])*10 + Number(botao[1])*9 + Number(botao[2])*8 + Number(botao[3])*7 + Number (botao[4])*6 + Number(botao[5])*5 + Number(botao[6])*4 + Number(botao[7])*3 + Number(botao[8])*2) % 11\n    let digito1 = (entrada[0]*10 + entrada[1]*9 + entrada[2]*8 + entrada[3]*7 + entrada[4]*6 + entrada[5]*5 + entrada[6]*4 + entrada[7]*3 + entrada[8]*2) % 11\n    console.log(digito1)\n   // let digito2 = (Number(botao[0])*11 + Number(botao[1])*10 + Number(botao[2])*9 + Number(botao[3])*8 + Number (botao[4])*7 + Number(botao[5])*6 + Number(botao[6])*5 + Number(botao[7])*4 + Number(botao[8])*3 + Number(botao[9])*2) % 11\n   let digito2 = (entrada[0]*11 + entrada[1]*10 + entrada[2]*9 + entrada[3]*8 + entrada[4]*7 + entrada[5]*6 + entrada[6]*5 + entrada[7]*4 + entrada[8]*3 + entrada[9]*2) % 11 \n   //let digito2 = (Number(botao[0])*11 + Number(botao[1])*10 + Number(botao[2])*9 + Number(botao[3])*8 + Number (botao[4])*7 + Number(botao[5])*6 + Number(botao[6])*5 + Number(botao[7])*4 + Number(botao[8])*3 + Number(botao[9])*2) % 11\n    if(digito1 < 2){\n      digito1 = 0\n      console.log(digito1)\n    }else{\n      digito1 = 11 - digito1 \n      console.log(digito1)\n    }\n\n    if(digito2 < 2){\n      digito2 = 0\n      console.log(digito1)\n    }else{\n      digito2 = 11 - digito2 \n      console.log(digito2)\n    }\n\n    if(digito1 == entrada[9] && digito2 == entrada[10]){\n      setResultado2('Este CPF é Valido')\n      setBordas(\"form-control border border-success\")\n      setFundo(\"card text-white bg-success mb-3 \")\n    //   setResultado(<div class=\"card text-white bg-dark mb-3\" >\n    //   <div class=\"card-header\">{entrada}</div>\n    //   <div class=\"card-body\">\n    //     <h5 class=\"card-title\">Este CPF é Valido</h5>\n    //     <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    //   </div>\n    // </div>)\n     \n    }else{\n        setResultado2('Este CPF é Invalido')\n        setBordas(\"form-control border border-danger\")\n        setFundo(\"card text-white bg-danger mb-3 \")\n    //   setResultado(<div class=\"card text-white bg-dark mb-3\" >\n    //   <div class=\"card-header\"></div>\n    //   <div class=\"card-body\">\n    //     <h5 class=\"card-title\">Este CPF é Invalido</h5>\n    //     <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    //   </div>\n    // </div>)\n     \n    }\n    // if(entrada.length===11)\n   \n    // {\n    //   setResultado2(\"11\")\n    // }\n\n  },[entrada])\n  \n  function clic(){\n   \n\n   \n  }\n\n  // function campoIn(event){\n  //    setEntrada(event.target.value)\n  //    console.log(entrada)\n  // }\n\n\n  return (\n    <div>\n\n    <div class=\"faixa\">\n          \n    </div>\n\n    <div id=\"titulo\">\n     \n    </div>\n\n\n\n    <div id=\"pesquisador\" class=\"input-group mb-3\">\n        <input id=\"ent\" type=\"text\" class= {borda}  placeholder=\"digite seu CPF\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" type=\"number\" onChange={e => setEntrada(e.target.value)} />\n        <div class=\"input-group-append\">\n            <button id=\"botao\" type=\"button\" class=\"btn btn-dark\" onClick={clic} >Pesquisar</button>\n        </div>\n    </div>\n\n    <div id=\"alerta\">\n  \n\n    <div class= {fundo} >\n      <div class=\"card-header\"></div>\n      <div class=\"card-body\">\n        <h5 class=\"card-title text-center\"> {resultado2}</h5>\n      </div>\n    </div>\n\n        \n    </div>\n\n    <footer class=\"footer\">\n\n        <div  >\n            .\n        </div>\n\n    </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"15","severity":1,"message":"16","line":12,"column":9,"nodeType":"17","messageId":"18","endLine":12,"endColumn":14},{"ruleId":"19","severity":1,"message":"20","line":41,"column":16,"nodeType":"21","messageId":"22","endLine":41,"endColumn":18},{"ruleId":"19","severity":1,"message":"20","line":41,"column":41,"nodeType":"21","messageId":"22","endLine":41,"endColumn":43},{"ruleId":"23","severity":1,"message":"24","line":100,"column":148,"nodeType":"25","messageId":"26","endLine":100,"endColumn":161},"no-unused-vars","'botao' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps"]